# This workflow will deploy the application to staging when the development branch is updated.

name: Deploy

on:
    push:
        branches:
            - development

jobs:
    deploy-package:
        runs-on: ubuntu-latest
        strategy:
            matrix:
                node-version: [18.x]
                # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

        steps:
            - uses: actions/checkout@v3
            - name: Use Node.js ${{ matrix.node-version }}
              uses: actions/setup-node@v3
              with:
                  node-version: ${{ matrix.node-version }}
                  cache: 'npm'
                  registry-url: 'https://registry.npmjs.org'
            - run: npm ci
            - run: npm run build:staging
            - name: Deploy to Azure FTP
              uses: SamKirkland/FTP-Deploy-Action@4.3.3
              with:
                  server: ${{ secrets.ftp_server_staging }}
                  username: ${{ secrets.ftp_username_staging }}
                  password: ${{ secrets.ftp_password_staging }}
                  server-dir: /site/wwwroot/
                  local-dir: ./build/

    notify:
        name: Discord Notification
        runs-on: ubuntu-latest
        needs: # make sure the notification is sent AFTER the jobs you want included have completed
            - deploy-documentation
            - deploy-package
        if: ${{ always() }} # You always want to be notified: success, failure, or cancelled
        steps:
            - name: Notify
              uses: nobrayner/discord-webhook@v1
              with:
                  github-token: ${{ secrets.github_token }}
                  discord-webhook: ${{ secrets.DISCORD_WEBHOOK }}
